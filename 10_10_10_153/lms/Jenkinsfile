pipeline {
    agent { label '153_giao_viec' }

    parameters {
        choice(name: 'ACTION', choices: ['restart', 'start', 'stop'], description: 'Hành động')
    } // đóng parameters

    environment  {
        GIT_REPO = "https://github.com/thonguyenduc2010/odoo18.git"
        DB_NAME = "tai_lieu_y_khoa"
        /* TELEGRAM_BOT_TOKEN = "AAHzH1m5fC_e4x1MdVeJl8aF-llVNtbjNpw"
        TELEGRAM_CHAT_ID = "-4064083384" */
    } // đóng environment

    stages {
        stage('Check action') {
            steps {
                script {
                    env.ACTION = params.ACTION?.trim() ?: 'restart'
                    echo " ACTION selected: ${env.ACTION}"
                }
            }
        } // đóng stage Check action

        stage('Checkout code') {
            steps {
                git branch: env.Branch_Name,
                credentialsId: env.Git_Credentials_Id,
                url: "${GIT_REPO}"
            }
        } // đóng stage checkout code

        stage('Get Commit Info') {
            steps {
                script {
                    def commitHash = sh(script: "git rev-parse --short HEAD", returnStdout: true).trim()
                    def commitMessage = sh(script: "git log -1 --pretty=%B", returnStdout: true).trim()
                    def author = sh(script: "git log -1 --pretty=format:'%an'", returnStdout: true).trim()
                    def branch = env.GIT_BRANCH ?: sh(script: "git rev-parse --abbrev-ref HEAD", returnStdout: true).trim()
                    def repoUrl = env.GIT_URL ?: "Unknown Repo"

                    sendTelegramMessage("""
                        🚀 *Commit mới trên hệ thống!*
                        🧑‍💻 *Author:* ${author}
                        📝 *Message:* ${commitMessage}
                                            """.stripIndent())

                }

            }
        } // đóng get commit info

        stage('Deploy'){
            steps {
                script {
                if (env.ACTION == "start") {
                    echo "First deployment"
                    sh """
                        mv docker-compose.yml.example docker-compose.yml
                        mv etc/odoo.conf.example etc/odoo.conf

                        sudo mkdir -p data pg_data
                        sudo chown -R $USER entrypoint.sh data pg_data etc
                        sudo chmod -R 777 entrypoint.sh
                        sudo chmod -R 777 data pg_data etc

                        docker-compose up -d
                    """
                    sendTelegramMessage("🚀 App tài liệu y khoa đã được triển khai thành công!")
                } else if ( env.ACTION == 'restart') {
                    echo "♻️ Restarting application"
                    sh "docker-compose restart"
                    sendTelegramMessage("♻️ App Loyalty Kangnam đã được cập nhật và restart!")
                } else {
                    echo "⛔ Stopping application..."
                    sh "docker-compose down"
                    sendTelegramMessage("⛔ App Loyalty Kangnam đã bị dừng!")
                }
            }
            }
        } // đóng stage deploy

    } // đóng stages

//     post {
//         success {
//             script {
//                 sendTelegramMessage("✅ Pipeline job tai_lieu_y_khoa đã chạy thành công!")
//             }
//         }
//         failure {
//             script {
//                 sendTelegramMessage("❌ Pipeline job tai_lieu_y_khoa đã gặp lỗi! Kiểm tra log.")
//             }
//         }
//     } // đóng post
}

def sendTelegramMessage(String message) {
    sh """
        curl -s -X POST "https://api.telegram.org/bot6102275063:${env.TELEGRAM_BOT_TOKEN}/sendMessage" \
        -d chat_id=${env.TELEGRAM_CHAT_ID} \
        -d text="${message}"
    """
} // đóng hàm sendTelegramMessage